plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'org.jetbrains.kotlin.plugin.parcelize'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.android.gms.oss-licenses-plugin'
    id 'com.diffplug.spotless'
    id 'com.google.protobuf'
}

spotless {
    java {
        target '**/*.java'
        googleJavaFormat().aosp()
        removeUnusedImports()
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    kotlin {
        target '**/*.kt'
        ktlint('0.46.1')
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    format 'misc', {
        target '**/*.gradle', '**/*.md', '**/.gitignore'
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }

    format 'xml', {
        target '**/*.xml'
        indentWithSpaces()
        trimTrailingWhitespace()
        endWithNewline()
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystorePropertiesFile?.withInputStream { keystoreProperties.load(it) }
}

android {
    compileSdk 32

    buildFeatures {
        dataBinding true
    }

    defaultConfig {
        applicationId "com.minitel.toolboxlite"
        minSdk 21
        targetSdk 32
        versionCode 2
        versionName "0.2"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        staging {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationIdSuffix ".staging"
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.6"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    // -- Core dependencies
    // Android KTX
    implementation 'androidx.core:core-ktx:1.8.0'

    // JSON Serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.4.0"

    // Coroutines
    def coroutines = '1.6.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // Dagger Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation "androidx.hilt:hilt-navigation-fragment:1.0.0"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Logging
    implementation 'com.squareup.logcat:logcat:0.1'

    // -- Data dependencies
    // Room
    def room_version = '2.4.3'
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // DataStore
    implementation 'androidx.datastore:datastore:1.0.0'
    implementation 'com.google.protobuf:protobuf-javalite:3.21.6'

    // Http
    def ktor_version = '2.1.1'
    implementation "io.ktor:ktor-client-okhttp:$ktor_version"
    def okhttp_version = '4.10.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // -- Domain dependencies
    // JSR-310 Backport
    implementation 'com.jakewharton.threetenabp:threetenabp:1.4.0'

    // -- Presentation Dependencies
    // Lifecycle
    def lifecycle_version = '2.5.1'
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // Navigation Component + Safe Args
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Support Libraries
    implementation "androidx.appcompat:appcompat:1.5.1"
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    // Fragment
    implementation "androidx.fragment:fragment-ktx:1.5.3"

    // -- Other dependencies
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    def kotest_version = '5.4.2'
    testImplementation "io.mockk:mockk:1.13.1"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core:$kotest_version"
    testImplementation "io.kotest:kotest-property:$kotest_version"

    def test_version = '1.4.0'
    androidTestImplementation "androidx.test:core:$test_version"
    androidTestImplementation "androidx.test:runner:$test_version"
    androidTestImplementation "androidx.test:rules:$test_version"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    androidTestImplementation 'androidx.test.ext:junit-ktx:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
